name: Mirror marketing → GCS (Git is source of truth)

on:
  workflow_dispatch:
  push:
    branches: ["**"]
    paths:
      - ".github/workflows/upload-sql-to-gcs.yml"
      - "**"

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions: { contents: read }

    env:
      PROJECT_ID: quick-platform-466015-d5
      GCS_BUCKET: gs://test-git-actions      # bucket name
      REPO_PREFIX: marketing                 # top-level prefix in GCS (your repo name)

    steps:
      - uses: actions/checkout@v4

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: gsutil

      - name: Mirror repo to GCS (delete extras)
        shell: bash
        run: |
          set -Eeuo pipefail
          shopt -s nullglob

          DEST_ROOT="${GCS_BUCKET%/}/${REPO_PREFIX}"
          echo "GCS root: $DEST_ROOT"

          # First-level dirs at repo root are your subrepos
          subrepos=()
          for d in */ ; do
            [[ -d "$d" ]] || continue
            base="${d%/}"
            [[ "$base" == .git || "$base" == .github || "$base" == .* ]] && continue
            subrepos+=( "$base" )
          done

          if [[ ${#subrepos[@]} -eq 0 ]]; then
            echo "No subrepos found at repo root. Nothing to sync."
            exit 0
          fi
          echo "Found subrepos: ${subrepos[*]}"

          # 1) Mirror each subrepo (this copies dags/, sql/, ddl/, etc.)
          for sub in "${subrepos[@]}"; do
            src="$sub"                       # e.g. fb_ads/
            dst="$DEST_ROOT/$sub"            # gs://.../marketing/fb_ads
            echo "Rsync (mirror, delete extras): $src -> $dst"
            gsutil -m rsync -d -r "$src" "$dst"
          done

          # 2) Delete any top-level entries under marketing/ not in Git
          echo "Cleaning stale entries under $DEST_ROOT/ ..."
          while IFS= read -r gcs_path; do
            [[ -n "$gcs_path" ]] || continue
            base="$(echo "$gcs_path" | sed 's:/*$::' | awk -F/ '{print $NF}')"
            keep=false
            for sub in "${subrepos[@]}"; do
              [[ "$sub" == "$base" ]] && keep=true && break
            done
            if [[ "$keep" == false ]]; then
              echo "Deleting stale path: $gcs_path"
              gsutil -m rm -r "$gcs_path" || true
            fi
          done < <(gsutil ls -d "$DEST_ROOT/"* 2>/dev/null || true)

          echo "Final listing:"
          gsutil ls -r "$DEST_ROOT/" || true
          echo "✅ Mirror complete."
