name: Upload Marketing to GCS

on:
  workflow_dispatch:
  push:
    branches: ["**"]
    paths:
      - ".github/workflows/upload-sql-to-gcs.yml"
      - "marketing/**"

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      PROJECT_ID: quick-platform-466015-d5
      GCS_BUCKET: gs://test-git-actions
      REPO_ROOT: marketing

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: gsutil

      - name: Sync DAGs and data to GCS
        shell: bash
        run: |
          set -Eeuo pipefail
          shopt -s nullglob

          DEST="${GCS_BUCKET%/}"
          echo "Destination root: $DEST"

          # collect subrepos under marketing/
          subrepos=()
          for d in "$REPO_ROOT"/*; do
            [[ -d "$d" ]] || continue
            subrepos+=( "$(basename "$d")" )
          done
          echo "Found subrepos: ${subrepos[*]:-<none>}"

          # --- Sync DAGs ---
          for sub in "${subrepos[@]}"; do
            src="$REPO_ROOT/$sub/dags"
            dst="$DEST/dags/$REPO_ROOT/$sub/dags"
            if [[ -d "$src" ]]; then
              echo "Syncing DAGs: $src -> $dst"
              gsutil -m rsync -d -r "$src" "$dst"
            else
              echo "No DAGs in $REPO_ROOT/$sub — removing GCS path if present: $dst"
              gsutil -m rm -r "$dst" 2>/dev/null || true
            fi
          done

          # Remove stale DAG folders in GCS
          echo "Cleaning stale GCS DAGs under $DEST/dags/$REPO_ROOT ..."
          while IFS= read -r gcs_path; do
            [[ -n "$gcs_path" ]] || continue
            gcs_sub=$(echo "$gcs_path" | sed 's:/*$::' | awk -F/ '{print $(NF-1)}')
            keep=false
            for sub in "${subrepos[@]}"; do
              [[ "$sub" == "$gcs_sub" ]] && keep=true && break
            done
            if [[ "$keep" == false ]]; then
              echo "Deleting stale DAGs path: $gcs_path"
              gsutil -m rm -r "$gcs_path" || true
            fi
          done < <(gsutil ls -d "$DEST/dags/$REPO_ROOT/"*"/dags" 2>/dev/null || true)

          # --- Sync other folders (sql/, ddl/, configs/, etc.) ---
          for sub in "${subrepos[@]}"; do
            for dir in "$REPO_ROOT/$sub"/*; do
              [[ -d "$dir" ]] || continue
              folder=$(basename "$dir")
              [[ "$folder" == "dags" ]] && continue
              dst="$DEST/data/$REPO_ROOT/$sub/$folder/"
              echo "Syncing $dir -> $dst"
              gsutil -m rsync -d -r "$dir" "$dst"
            done
          done

          # Remove stale data folders in GCS
          echo "Cleaning stale GCS data under $DEST/data/$REPO_ROOT ..."
          while IFS= read -r gcs_path; do
            [[ -n "$gcs_path" ]] || continue
            gcs_sub=$(echo "$gcs_path" | sed 's:/*$::' | awk -F/ '{print $NF}')
            keep=false
            for sub in "${subrepos[@]}"; do
              [[ "$sub" == "$gcs_sub" ]] && keep=true && break
            done
            if [[ "$keep" == false ]]; then
              echo "Deleting stale data path: $gcs_path"
              gsutil -m rm -r "$gcs_path" || true
            fi
          done < <(gsutil ls -d "$DEST/data/$REPO_ROOT/"* 2>/dev/null || true)

          echo "Final GCS listing:"
          gsutil ls -r "$DEST/" || true
          echo "✅ Sync complete."
