name: Mirror marketing to GCS (hard delete + exact mirror)

on:
  workflow_dispatch:
  push:
    branches: ["**"]
    paths:
      - ".github/workflows/upload-sql-to-gcs.yml"
      - "**"

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions: { contents: read }

    env:
      PROJECT_ID: quick-platform-466015-d5
      GCS_BUCKET: gs://test-git-actions
      REPO_NAME: marketing   # DAGS -> gs://bucket/dags/marketing/<sub>; DATA -> gs://bucket/data/marketing/<sub>

    steps:
      - uses: actions/checkout@v4

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: gsutil

      - name: Mirror (hard delete first, then copy)
        shell: bash
        run: |
          set -Eeuo pipefail
          set -x
          trap 'echo "::error::Failed at line $LINENO: $BASH_COMMAND"' ERR
          shopt -s nullglob

          BUCKET="${GCS_BUCKET%/}"
          DAGS_ROOT="${BUCKET}/dags/${REPO_NAME}"
          DATA_ROOT="${BUCKET}/data/${REPO_NAME}"
          CONFIG_ROOT="${BUCKET}/config"

          # Detect whether subrepos live at repo root or under marketing/
          FS_ROOT="."
          if [[ -d "marketing" ]] && compgen -G "marketing/*" > /dev/null; then
            FS_ROOT="marketing"
          fi
          echo "FS_ROOT=${FS_ROOT}"

          # Ensure required top-level prefixes exist
          echo | gsutil cp - "${BUCKET}/dags/.gcskeep" >/dev/null 2>&1 || true
          echo | gsutil cp - "${BUCKET}/data/.gcskeep" >/dev/null 2>&1 || true
          echo | gsutil cp - "${DATA_ROOT}/.gcskeep"   >/dev/null 2>&1 || true

          # Keep only dags/, data/, config/ at bucket root
          for top in $(gsutil ls -d "${BUCKET}/*" 2>/dev/null || true); do
            base="${top%/}"; base="${base##*/}"
            if [[ "$base" != "dags" && "$base" != "data" && "$base" != "config" ]]; then
              gsutil -m rm -r "$top" || true
            fi
          done

          # Optional repo-level config/
          if [[ -d "config" ]]; then
            gsutil -m rsync -d -r "config" "${CONFIG_ROOT}"
          else
            gsutil -m rm -r "${CONFIG_ROOT}" 2>/dev/null || true
          fi

          # Discover subrepos (first-level dirs under FS_ROOT)
          subrepos=()
          for d in "$FS_ROOT"/*; do
            [[ -d "$d" ]] || continue
            b="$(basename "$d")"
            case "$b" in .git|.github|config|.*) continue ;; esac
            subrepos+=("$b")
          done
          echo "Subrepos: ${subrepos[*]:-<none>}"
          [[ ${#subrepos[@]} -gt 0 ]] || { echo "Nothing to sync."; exit 0; }

          src_path() { echo "${FS_ROOT%/}/$1"; }

          # ======= DAGS: hard delete then copy =======
          for sub in "${subrepos[@]}"; do
            src="$(src_path "$sub")/dags"
            dst="${DAGS_ROOT}/${sub}"
            gsutil -m rm -r "${dst}" 2>/dev/null || true
            if [[ -d "$src" ]]; then
              gsutil -m rsync -r "$src" "$dst"
            else
              echo "No DAGs for $sub (left deleted)."
            fi
          done

          # Prune stale DAG subrepos (under dags/marketing/)
          for g in $(gsutil ls -d "${DAGS_ROOT}/*" 2>/dev/null || true); do
            base="${g%/}"; base="${base##*/}"
            keep=false
            for s in "${subrepos[@]}"; do [[ "$s" == "$base" ]] && keep=true && break; done
            if [[ "$keep" == false ]]; then gsutil -m rm -r "$g" || true; fi
          done

          # ======= DATA: hard delete then copy (EXCEPT dags/) =======
          for sub in "${subrepos[@]}"; do
            # remove any old layout at data/<sub> (pre-migration)
            gsutil -m rm -r "${BUCKET}/data/${sub}" 2>/dev/null || true

            src="$(src_path "$sub")"
            dst="${DATA_ROOT}/${sub}/"
            gsutil -m rm -r "${dst}" 2>/dev/null || true
            gsutil -m rsync -r -x '(^|/)dags(/|$)' "$src" "$dst"
          done

          # Prune stale DATA subrepos (under data/marketing/)
          for g in $(gsutil ls -d "${DATA_ROOT}/*" 2>/dev/null || true); do
            base="${g%/}"; base="${base##*/}"
            keep=false
            for s in "${subrepos[@]}"; do [[ "$s" == "$base" ]] && keep=true && break; done
            if [[ "$keep" == false ]]; then gsutil -m rm -r "$g" || true; fi
          done

          set +x
          echo "Final listing:"
          gsutil ls -r "${BUCKET}/dags/" || true
          gsutil ls -r "${BUCKET}/data/" || true
          echo "âœ… Hard mirror complete: dags/marketing/<subrepo> and data/marketing/<subrepo>."
