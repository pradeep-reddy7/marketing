# Sync DAGs and data for every subfolder under test-git-hub-actions/marketing
set -Eeuo pipefail
shopt -s nullglob

# ===== CONFIG =====
BUCKET="gs://quick-platform-466015-d5/test-git-actions"   # change if needed
REPO_ROOT="test-git-hub-actions/marketing"
# ==================

command -v gsutil >/dev/null || { echo "ERROR: gsutil not found"; exit 1; }

# Collect subrepos present in Git under REPO_ROOT
subrepos=()
for d in "$REPO_ROOT"/*; do
  [[ -d "$d" ]] || continue
  subrepos+=( "$(basename "$d")" )
done
echo "Found subrepos: ${subrepos[*]:-<none>}"

# ---------------------------
# 1) Sync DAGs (mirror mode)
# ---------------------------
for sub in "${subrepos[@]}"; do
  src="$REPO_ROOT/$sub/dags"
  dst="$BUCKET/dags/$REPO_ROOT/$sub/dags"
  if [[ -d "$src" ]]; then
    echo "Syncing DAGs: $src -> $dst"
    gsutil -m rsync -d -r "$src" "$dst"
  else
    echo "No DAGs in $REPO_ROOT/$sub — removing GCS dags path if present: $dst"
    gsutil -m rm -r "$dst" 2>/dev/null || true
  fi
done

# Remove stale subfolders in GCS dags that are not present in Git
echo "Cleaning stale GCS DAGs under $BUCKET/dags/$REPO_ROOT ..."
while IFS= read -r gcs_path; do
  [[ -n "$gcs_path" ]] || continue
  # example path: gs://.../dags/test-git-hub-actions/marketing/<sub>/dags
  gcs_sub=$(echo "$gcs_path" | sed 's:/*$::' | awk -F/ '{print $(NF-1)}')
  keep=false
  for sub in "${subrepos[@]}"; do
    if [[ "$sub" == "$gcs_sub" ]]; then keep=true; break; fi
  done
  if [[ "$keep" == false" ]]; then
    echo "Deleting stale DAGs path: $gcs_path"
    gsutil -m rm -r "$gcs_path" || true
  fi
done < <(gsutil ls -d "$BUCKET/dags/$REPO_ROOT/"*"/dags" 2>/dev/null || true)

# ----------------------------------------------
# 2) Sync other folders (everything except DAGs)
# ----------------------------------------------
for sub in "${subrepos[@]}"; do
  for dir in "$REPO_ROOT/$sub"/*; do
    [[ -d "$dir" ]] || continue
    folder=$(basename "$dir")
    if [[ "$folder" != "dags" ]]; then
      dst="$BUCKET/data/$REPO_ROOT/$sub/$folder/"
      echo "Syncing $dir -> $dst"
      gsutil -m rsync -d -r "$dir" "$dst"
    fi
  done
done

# Remove stale top-level subrepo folders in GCS data that are not present in Git
echo "Cleaning stale GCS data under $BUCKET/data/$REPO_ROOT ..."
while IFS= read -r gcs_path; do
  [[ -n "$gcs_path" ]] || continue
  # example path: gs://.../data/test-git-hub-actions/marketing/<sub>/
  gcs_sub=$(echo "$gcs_path" | sed 's:/*$::' | awk -F/ '{print $NF}')
  keep=false
  for sub in "${subrepos[@]}"; do
    if [[ "$sub" == "$gcs_sub" ]]; then keep=true; break; fi
  done
  if [[ "$keep" == false ]]; then
    echo "Deleting stale data path: $gcs_path"
    gsutil -m rm -r "$gcs_path" || true
  fi
done < <(gsutil ls -d "$BUCKET/data/$REPO_ROOT/"* 2>/dev/null || true)

echo "✅ Sync complete."
