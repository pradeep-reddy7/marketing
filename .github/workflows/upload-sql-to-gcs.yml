name: Mirror marketing to GCS (hard delete + exact mirror)

on:
  workflow_dispatch:
  push:
    branches: ["**"]
    paths:
      - ".github/workflows/upload-sql-to-gcs.yml"
      - "**"

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions: { contents: read }

    env:
      PROJECT_ID: quick-platform-466015-d5
      GCS_BUCKET: gs://test-git-actions
      REPO_NAME: marketing   # DAGS -> gs://bucket/dags/marketing/<sub>; DATA -> gs://bucket/data/marketing/<sub>

    steps:
      - uses: actions/checkout@v4

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: gsutil

      - name: Mirror (hard delete first, then copy)
        shell: bash
        run: |
          set -Eeuo pipefail
          set -x
          trap 'echo "::error::Failed at line $LINENO: $BASH_COMMAND"' ERR
          shopt -s nullglob

          BUCKET="${GCS_BUCKET%/}"
          DAGS_ROOT="${BUCKET}/dags/${REPO_NAME}"
          DATA_ROOT="${BUCKET}/data/${REPO_NAME}"
          CONFIG_ROOT="${BUCKET}/config"

          # Detect subrepos live at repo root or under marketing/
          FS_ROOT="."
          if [[ -d "marketing" ]] && find "marketing" -mindepth 1 -maxdepth 1 -type d -print -quit | grep -q .; then
            FS_ROOT="marketing"
          fi
          echo "FS_ROOT=${FS_ROOT}"

          # Ensure mandatory top-level dirs exist
          echo | gsutil cp - "${BUCKET}/dags/.gcskeep" >/dev/null 2>&1 || true
          echo | gsutil cp - "${BUCKET}/data/.gcskeep" >/dev/null 2>&1 || true
          echo | gsutil cp - "${DATA_ROOT}/.gcskeep"   >/dev/null 2>&1 || true  # make data/marketing/

          # ========= Root hygiene (bucket root): keep ONLY dags/, data/, config/ =========
          while IFS= read -r top; do
            [[ -z "$top" ]] && continue
            base="${top%/}"; base="${base##*/}"
            if [[ "$base" != "dags" && "$base" != "data" && "$base" != "config" ]]; then
              gsutil -m rm -r "$top" || true
            fi
          done < <(gsutil ls -d "${BUCKET}/*" 2>/dev/null || true)

          # ========= Optional repo-level config/ =========
          if [[ -d "config" ]]; then
            gsutil -m rsync -d -r "config" "${CONFIG_ROOT}"
          else
